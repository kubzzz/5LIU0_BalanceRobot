<?xml version="1.0"?> <!-- Specify this is an xml file using version 1.0-->

<!-- simplistic URDF file for a balance robot -->

<!-- INFO: in RVIZ2 
    red is   x-axis
    green is y-axis
    blue is  z-axis
-->

<!-- Specify this is also an xacro extension (macro xml) -->
<!-- Here begins the robot description with tag <robot> -->
<robot xmlns:xacro="https://www.ros.org/wiki/xacro" name="balanceRobot">

    <!-- Material color properties -->
    <material name="gray">
        <color rgba="0.5 0.5 0.5 1.0"/>        
    </material>

    <material name="red">
        <color rgba="0.6 0.0 0.0 1.0"/>
    </material>

    <material name="green">
        <color rgba="0.0 0.6 0.0 1.0"/>
    </material>

    <material name="blue">
        <color rgba="0.0 0.0 0.6 1.0"/>
    </material>

    <material name="white">
        <color rgba="1.0 1.0 1.0 1.0"/>
    </material>

    <material name="black">
        <color rgba="0.0 0.0 0.0 1.0"/>
    </material>


    <!-- Links of the robot they describe the (objects/parts) of the robot -->
    <!-- Link that is on the ground in the middle of the robot (useful for navigation purposes -->
    <link name="base_footprint"> <!-- Conventional name for this virtual reference link -->
        <!-- Empty virtual link-->
    </link>

    <!-- Base link stepper motors with housing -->
    <!-- The dimension are defined first as parameters every dimension is in meters -->
    <xacro:property name="HSB" value="0.083"/> <!-- HSB= Height Stepper Base (Height = x-axis) --> 
    <xacro:property name="WSB" value="0.050"/> <!-- WSB= Width Stepper Base (Width = y-axis) -->
    <xacro:property name="LSB" value="0.046"/> <!-- LSB= Length Stepper Base (Length = z-axis) -->

    <link name="base_link"> <!-- Needs to be called base_link (as a first real link in stead of StepperBase) -->
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <!-- <box size="${HSB} ${WSB} ${LSB}"/> -->
                <mesh filename="package://balance_robot/meshes/StepperBase.dae"/>
            </geometry>
            <!-- <material name="gray"/> -->
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="${HSB} ${WSB} ${LSB}"/>
            </geometry>
        </collision>
    </link>

    <!-- Base Plate of the robot where everthing gets mounted this geometry is approximated as a box -->
    <!-- The dimension are defined first as parameters -->
    <xacro:property name="HBP" value="0.083"/> <!-- HBP= Height Base Plate -->
    <xacro:property name="WBP" value="0.108"/> <!-- WBP= Width Base Plate -->
    <xacro:property name="LBP" value="0.007"/> <!-- LBP= Length Base Plate -->

    <link name="basePlate_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <!-- <box size="${HBP} ${WBP} ${LBP}"/> -->
                <!-- <mesh filename="package://balance_robot/meshes/BasePlate.dae"/> -->
            </geometry>
            <!-- <material name="blue"/> -->
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="${HBP} ${WBP} ${LBP}"/>
            </geometry>
        </collision>
    </link>

    <!-- Front Tip Stop of the robot (stopping the robot from tipping over to the front) -->
    <!-- The dimension are defined first as parameters -->
    <!-- We heavily simplify this stop as a box -->
    <xacro:property name="HTS" value="0.020"/> <!-- HTS= Height Tip Stop -->
    <xacro:property name="WTS" value="0.020"/> <!-- WTS= Width Tip Stop -->
    <xacro:property name="LTS" value="0.020"/> <!-- LTS= Length Tip Stop -->

    <link name="frontTipStop_link">
        <visual>
            <origin xyz="0.0 0.0065 0.0" rpy="${(pi*0.28)+(pi/2)} 0.0 ${pi}"/> <!-- turned 50 degrees on x-axis -->
            <geometry>
                <!-- <box size="${HTS} ${WTS} ${LTS}"/> -->
                <mesh filename="package://balance_robot/meshes/TipOverStop.dae"/>
            </geometry>
            <!-- <material name="blue"/> -->
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="${pi*0.28} 0.0 0.0"/>
            <geometry>
                <box size="${HTS} ${WTS} ${LTS}"/>
            </geometry>
        </collision>
    </link>

    <!-- Back Tip Stop of the robot (stopping the robot from tipping over to the back) -->

    <link name="backTipStop_link">
        <visual>
            <origin xyz="0.0 -0.0065 0.0" rpy="${(pi*0.28)-(1.5*pi)} 0.0 0.0"/> <!-- turned 50 degrees on x-axis -->
            <geometry>
                <!-- <box size="${HTS} ${WTS} ${LTS}"/> -->
                <mesh filename="package://balance_robot/meshes/TipOverStop.dae"/>
            </geometry>
            <!-- <material name="blue"/> -->
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="-${pi*0.28} 0.0 0.0"/>
            <geometry>
                <box size="${HTS} ${WTS} ${LTS}"/>
            </geometry>
        </collision>
    </link>

    <!-- Main body link where battery pack and electronics are mounted -->
    <!-- The dimension are defined first as parameters -->
    <xacro:property name="HBL" value="0.083"/> <!-- HBL= Height Body Link -->
    <xacro:property name="WBL" value="0.043"/> <!-- WBL= Width Body Link -->
    <xacro:property name="LBL" value="0.150"/> <!-- LBL= Length Body Link -->

    <link name="body_link">
        <visual>
            <origin xyz="0.00045 0.0 -0.0135" rpy="0.0 0.0 0.0"/>
            <geometry>
                <!-- <box size="${HBL} ${WBL} ${LBL}"/> -->
                <mesh filename="package://balance_robot/meshes/MainBody.dae"/>
            </geometry>
            <!-- <material name="white"/> -->
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="${HBL} ${WBL} ${LBL}"/>
            </geometry>
        </collision>     
    </link>

    <!-- Top Plate link the platform on top of the robot -->
    <!-- The dimension are defined first as parameters -->
    <xacro:property name="RTP" value="0.054"/> <!-- RPB= Radius Top Plate -->
    <xacro:property name="LTP" value="0.007"/> <!-- LPB= Length Top Plate -->
    
    <link name="topPlate_link">
        <visual>
            <origin xyz="0.0001 -0.0015 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <!-- <cylinder radius="${RTP}" length="${LTP}"/> -->
                <mesh filename="package://balance_robot/meshes/TopPlate.dae"/>
            </geometry>
            <!-- <material name="blue"/> -->
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <cylinder radius="${RTP}" length="${LTP}"/>
            </geometry>
        </collision>
    </link>

    <!-- Link that represents the right wheel-->
    <!-- The dimension are defined first as parameters -->
    <xacro:property name="RW" value="0.0375"/> <!-- RW= Radius Wheel -->
    <xacro:property name="LW" value="0.024"/> <!-- LW= Length Wheel -->

    <link name="right_wheel_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <!-- <cylinder radius="${RW}" length="${LW}"/> -->
                <mesh filename="package://balance_robot/meshes/Wheel.dae"/>
            </geometry>
            <!-- <material name="black"/> -->
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 ${pi/2} 0.0"/>
            <geometry>
                <cylinder radius="${RW}" length="${LW}"/>
            </geometry>
        </collision>
    </link>

    <!-- Link that represents the left wheel -->
    <link name="left_wheel_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <!-- <cylinder radius="${RW}" length="${LW}"/> -->
                <mesh filename="package://balance_robot/meshes/Wheel.dae"/>
            </geometry>
            <!-- <material name="black"/> -->
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 ${pi/2} 0.0"/>
            <geometry>
                <cylinder radius="${RW}" length="${LW}"/>
            </geometry>
        </collision>
    </link>

    
    <!-- Joints of the robot they attach the links together to make a TF tree -->
    <!-- Joint that connects the virtual base_footprint and base_link -->
    <!-- This link makes sure the origin is on the ground in the middle of the robot-->
    <joint name="base_footprint_joint" type="fixed">
        <origin xyz="0.0 0.0 ${RW}" rpy="0.0 0.0 0.0"/> <!-- Offset is the radius of a (right) wheel -->
        <parent link="base_footprint"/>
        <child link="base_link"/>
    </joint>

    <!-- Joint that connects base_link with baseplate -->
    <joint name="base_plate_joint" type="fixed">
        <origin xyz="0.0 0.0 ${(LSB/2) + (LBP/2)}" rpy="0.0 0.0 0.0"/> <!-- half-LSB+half-LBP (0.023+0.0035)=0.0265-->
        <parent link="base_link"/>
        <child link="basePlate_link"/>
    </joint>

    <!-- Joint that connects the frontTipStop with the baseplate -->
    <joint name="plate_ftip_joint" type="fixed">
        <origin xyz="0.0 -${(WBP/2)} -${(LTS/2) + (LBP/2)}" rpy="0.0 0.0 0.0"/> 
        <parent link="basePlate_link"/>
        <child link="frontTipStop_link"/>
    </joint>

    <!-- Joint that connects the frontTipStop with the baseplate -->
    <joint name="plate_btip_joint" type="fixed">
        <origin xyz="0.0 ${(WBP/2)} -${(LTS/2) + (LBP/2)}" rpy="0.0 0.0 0.0"/> 
        <parent link="basePlate_link"/>
        <child link="backTipStop_link"/>
    </joint>

    <!-- Joint that links the main body with respect to the base_link -->
    <joint name="base_body_link" type="fixed">
        <origin xyz="0.0 0.0 ${(LSB/2) + LBP + (LBL/2)}" rpy="0.0 0.0 0.0"/> <!-- half-LSB+LBP+half-LBL (0.023+0.007+0.085)=0.115 -->
        <parent link="base_link"/>
        <child link="body_link"/>
    </joint>

    <!-- Joint that links the top plate with respect to the base_link -->
    <joint name="base_topPlate_joint" type="fixed">
        <origin xyz="0.0 0.0 ${(LSB/2) + LBP + LBL + (LTP/2)}" rpy="0.0 0.0 0.0"/> <!-- Half-LSB+LBP+LBL+half-LTP (0.023+0.007+0.17+0.0035=0.2035)-->
        <parent link="base_link"/>
        <child link="topPlate_link"/>
    </joint>

    <!-- Joint that links the right wheel to the base_link as a continous rotating wheel -->
    <!-- Outside dimensions of wheels measure 137,50mm of the real robot -->
    <xacro:property name="ODW" value="0.1375"/> <!-- ODW= Outside dimension wheels-->

    <joint name="right_wheel_joint" type="continuous">
        <origin xyz="${(ODW/2)-(LW/2)} 0.0 -0.001" rpy="0.0 0.0 0.0"/> <!-- 0.1375/2-0.024/2=0.05675 -->
        <parent link="base_link"/>
        <child link="right_wheel_link"/>
        <axis xyz="1.0 0.0 0.0"/> <!-- continuous rotation is around the x-axis -->
    </joint>

    <!-- Joint that links the left wheel to the base_link as a continous rotating wheel -->
    <joint name="left_wheel_joint" type="continuous">
        <origin xyz="-${(ODW/2)-(LW/2)} 0.0 -0.001" rpy="0.0 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="left_wheel_link"/>
        <axis xyz="1.0 0.0 0.0"/> <!-- continuous rotation is around the x-axis -->
    </joint>

</robot>